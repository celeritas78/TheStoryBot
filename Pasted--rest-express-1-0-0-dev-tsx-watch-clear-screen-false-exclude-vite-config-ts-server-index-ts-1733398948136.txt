> rest-express@1.0.0 dev
> tsx watch --clear-screen=false --exclude vite.config.ts.* server/index.ts

11:40:42 AM [express] Server is running on port 5000
{"timestamp":"2024-12-05T11:40:47.323Z","level":"ERROR","context":"database","message":"Database connection attempt 1 failed","error":{"message":"Connection terminated due to connection timeout","stack":"Error: Connection terminated due to connection timeout\n    at /home/runner/CustomBedtimeStories/node_modules/pg-pool/index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at testConnection (/home/runner/CustomBedtimeStories/db/index.ts:107:22)"}}

 ERROR(TypeScript)  Type '() => Promise<{ ok: boolean; message?: string; data?: any; }>' is not assignable to type 'MutationFunction<RequestResult, void>'.
  Type 'Promise<{ ok: boolean; message?: string | undefined; data?: any; }>' is not assignable to type 'Promise<RequestResult>'.
    Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type 'RequestResult'.
      Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type '{ ok: false; message: string; }'.
        Types of property 'ok' are incompatible.
          Type 'boolean' is not assignable to type 'false'.
 FILE  /home/runner/CustomBedtimeStories/client/src/hooks/use-user.ts:88:5

    86 |
    87 |   const logoutMutation = useMutation<RequestResult, Error>({
  > 88 |     mutationFn: () => handleRequest('/api/logout', 'POST'),
       |     ^^^^^^^^^^
    89 |     onSuccess: () => {
    90 |       queryClient.invalidateQueries({ queryKey: ['user'] });
    91 |     },

 ERROR(TypeScript)  Type '(userData: { email: string; password: string; id?: number | undefined; provider?: string | undefined; providerId?: string | null | undefined; displayName?: string | null | undefined; avatarUrl?: string | ... 1 more ... | undefined; ... 9 more ...; updatedAt?: Date | undefined; }) => Promise<...>' is not assignable to type 'MutationFunction<RequestResult, { email: string; password: string; id?: number | undefined; provider?: string | undefined; providerId?: string | null | undefined; displayName?: string | null | undefined; ... 10 more ...; updatedAt?: Date | undefined; }>'.
  Type 'Promise<{ ok: boolean; message?: string | undefined; data?: any; }>' is not assignable to type 'Promise<RequestResult>'.
    Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type 'RequestResult'.
      Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type '{ ok: false; message: string; }'.
        Types of property 'ok' are incompatible.
          Type 'boolean' is not assignable to type 'false'.
 FILE  /home/runner/CustomBedtimeStories/client/src/hooks/use-user.ts:95:5

    93 |
    94 |   const registerMutation = useMutation<RequestResult, Error, InsertUser>({
  > 95 |     mutationFn: (userData) => handleRequest('/api/register', 'POST', userData),
       |     ^^^^^^^^^^
    96 |     onSuccess: () => {
    97 |       queryClient.invalidateQueries({ queryKey: ['user'] });
    98 |     },

 ERROR(TypeScript)  Type '(profileData: Partial<{ id: number; email: string; password: string; provider: string; providerId: string | null; displayName: string | null; avatarUrl: string | null; bio: string | null; emailVerified: boolean; ... 7 more ...; updatedAt: Date; }>) => Promise<...>' is not assignable to type 'MutationFunction<RequestResult, Partial<{ id: number; email: string; password: string; provider: string; providerId: string | null; displayName: string | null; avatarUrl: string | null; bio: string | null; ... 8 more ...; updatedAt: Date; }>>'.
  Type 'Promise<{ ok: boolean; message?: string | undefined; data?: any; }>' is not assignable to type 'Promise<RequestResult>'.
    Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type 'RequestResult'.
      Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type '{ ok: false; message: string; }'.
        Types of property 'ok' are incompatible.
          Type 'boolean' is not assignable to type 'false'.
 FILE  /home/runner/CustomBedtimeStories/client/src/hooks/use-user.ts:102:5

    100 |
    101 |   const updateProfileMutation = useMutation<RequestResult, Error, Partial<User>>({
  > 102 |     mutationFn: (profileData) => handleRequest('/api/profile', 'PUT', profileData),
        |     ^^^^^^^^^^
    103 |     onSuccess: () => {
    104 |       queryClient.invalidateQueries({ queryKey: ['user'] });
    105 |     },

 ERROR(TypeScript)  Type '() => Promise<{ ok: boolean; message?: string; data?: any; }>' is not assignable to type 'MutationFunction<RequestResult, void>'.
  Type 'Promise<{ ok: boolean; message?: string | undefined; data?: any; }>' is not assignable to type 'Promise<RequestResult>'.
    Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type 'RequestResult'.
      Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type '{ ok: false; message: string; }'.
        Types of property 'ok' are incompatible.
          Type 'boolean' is not assignable to type 'false'.
 FILE  /home/runner/CustomBedtimeStories/client/src/hooks/use-user.ts:109:5

    107 |
    108 |   const deleteAccountMutation = useMutation<RequestResult, Error>({
  > 109 |     mutationFn: () => handleRequest('/api/account', 'DELETE'),
        |     ^^^^^^^^^^
    110 |     onSuccess: () => {
    111 |       queryClient.invalidateQueries({ queryKey: ['user'] });
    112 |     },

 ERROR(TypeScript)  No overload matches this call.
  The last overload gave the following error.
    Argument of type 'string' is not assignable to parameter of type 'number'.
 FILE  /home/runner/CustomBedtimeStories/server/index.ts:89:23

    87 |
    88 |   const PORT = process.env.PORT || 5000;
  > 89 |   server.listen(PORT, "0.0.0.0", () => {
       |                       ^^^^^^^^^
    90 |     log(`Server is running on port ${PORT}`);
    91 |   });
    92 | })();

[TypeScript] Found 5 errors. Watching for file changes.
Fetching stories for user: 2
Stories fetched: 5
11:41:08 AM [express] GET /api/stories 304 in 504ms :: [{"id":49,"title":"Riya and the Secrets of Fai…
11:41:22 AM [express] GET /api/stories/47 304 in 286ms :: {"id":47,"title":"Salim's Kind Eid Surprise…
Audio request received: { filename: 'da7099fc-356b-4b2c-89d3-1e4b0eb4bdf9.mp3' }
Resolved file path: {
  filePath: '/home/runner/CustomBedtimeStories/public/audio/da7099fc-356b-4b2c-89d3-1e4b0eb4bdf9.mp3'
}
Audio file stats: {
  size: 725760,
  path: '/home/runner/CustomBedtimeStories/public/audio/da7099fc-356b-4b2c-89d3-1e4b0eb4bdf9.mp3',
  exists: true
}
Audio request received: { filename: 'da7099fc-356b-4b2c-89d3-1e4b0eb4bdf9.mp3' }
Resolved file path: {
  filePath: '/home/runner/CustomBedtimeStories/public/audio/da7099fc-356b-4b2c-89d3-1e4b0eb4bdf9.mp3'
}
Audio file stats: {
  size: 725760,
  path: '/home/runner/CustomBedtimeStories/public/audio/da7099fc-356b-4b2c-89d3-1e4b0eb4bdf9.mp3',
  exists: true