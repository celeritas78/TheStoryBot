> rest-express@1.0.0 dev
> tsx watch --clear-screen=false --exclude vite.config.ts.* server/index.ts

12:18:55 PM [express] Server is running on port 5000
12:19:01 PM [vite] ✨ new dependencies optimized: @radix-ui/react-avatar
12:19:01 PM [vite] ✨ optimized dependencies changed. reloading

 ERROR(TypeScript)  Type '(userData: { email: string; password: string; id?: number | undefined; provider?: string | undefined; providerId?: string | null | undefined; displayName?: string | null | undefined; avatarUrl?: string | ... 1 more ... | undefined; ... 9 more ...; updatedAt?: Date | undefined; }) => Promise<...>' is not assignable to type 'MutationFunction<RequestResult, { email: string; password: string; id?: number | undefined; provider?: string | undefined; providerId?: string | null | undefined; displayName?: string | null | undefined; ... 10 more ...; updatedAt?: Date | undefined; }>'.
  Type 'Promise<{ ok: boolean; message?: string | undefined; data?: any; }>' is not assignable to type 'Promise<RequestResult>'.
    Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type 'RequestResult'.
      Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type '{ ok: false; message: string; }'.
        Types of property 'ok' are incompatible.
          Type 'boolean' is not assignable to type 'false'.
 FILE  /home/runner/CustomBedtimeStories/client/src/hooks/use-user.ts:80:5

    78 |
    79 |   const loginMutation = useMutation<RequestResult, Error, InsertUser>({
  > 80 |     mutationFn: async (userData) => {
       |     ^^^^^^^^^^
    81 |       console.log('Attempting login with:', { email: userData.email });
    82 |       const result = await handleRequest('/api/login', 'POST', userData);
    83 |       console.log('Login response:', result);

 ERROR(TypeScript)  Type '() => Promise<{ ok: boolean; message?: string; data?: any; }>' is not assignable to type 'MutationFunction<RequestResult, void>'.
  Type 'Promise<{ ok: boolean; message?: string | undefined; data?: any; }>' is not assignable to type 'Promise<RequestResult>'.
    Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type 'RequestResult'.
      Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type '{ ok: false; message: string; }'.
        Types of property 'ok' are incompatible.
          Type 'boolean' is not assignable to type 'false'.
 FILE  /home/runner/CustomBedtimeStories/client/src/hooks/use-user.ts:103:5

    101 |
    102 |   const logoutMutation = useMutation<RequestResult, Error>({
  > 103 |     mutationFn: () => handleRequest('/api/logout', 'POST'),
        |     ^^^^^^^^^^
    104 |     onSuccess: () => {
    105 |       queryClient.invalidateQueries({ queryKey: ['user'] });
    106 |     },

 ERROR(TypeScript)  Type '(userData: { email: string; password: string; id?: number | undefined; provider?: string | undefined; providerId?: string | null | undefined; displayName?: string | null | undefined; avatarUrl?: string | ... 1 more ... | undefined; ... 9 more ...; updatedAt?: Date | undefined; }) => Promise<...>' is not assignable to type 'MutationFunction<RequestResult, { email: string; password: string; id?: number | undefined; provider?: string | undefined; providerId?: string | null | undefined; displayName?: string | null | undefined; ... 10 more ...; updatedAt?: Date | undefined; }>'.
  Type 'Promise<{ ok: boolean; message?: string | undefined; data?: any; }>' is not assignable to type 'Promise<RequestResult>'.
    Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type 'RequestResult'.
      Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type '{ ok: false; message: string; }'.
        Types of property 'ok' are incompatible.
          Type 'boolean' is not assignable to type 'false'.
 FILE  /home/runner/CustomBedtimeStories/client/src/hooks/use-user.ts:110:5

    108 |
    109 |   const registerMutation = useMutation<RequestResult, Error, InsertUser>({
  > 110 |     mutationFn: (userData) => handleRequest('/api/register', 'POST', userData),
        |     ^^^^^^^^^^
    111 |     onSuccess: () => {
    112 |       queryClient.invalidateQueries({ queryKey: ['user'] });
    113 |     },

 ERROR(TypeScript)  Type '(profileData: Partial<{ id: number; email: string; password: string; provider: string; providerId: string | null; displayName: string | null; avatarUrl: string | null; bio: string | null; emailVerified: boolean; ... 7 more ...; updatedAt: Date; }>) => Promise<...>' is not assignable to type 'MutationFunction<RequestResult, Partial<{ id: number; email: string; password: string; provider: string; providerId: string | null; displayName: string | null; avatarUrl: string | null; bio: string | null; ... 8 more ...; updatedAt: Date; }>>'.
  Type 'Promise<{ ok: boolean; message?: string | undefined; data?: any; }>' is not assignable to type 'Promise<RequestResult>'.
    Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type 'RequestResult'.
      Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type '{ ok: false; message: string; }'.
        Types of property 'ok' are incompatible.
          Type 'boolean' is not assignable to type 'false'.
 FILE  /home/runner/CustomBedtimeStories/client/src/hooks/use-user.ts:117:5

    115 |
    116 |   const updateProfileMutation = useMutation<RequestResult, Error, Partial<User>>({
  > 117 |     mutationFn: (profileData) => handleRequest('/api/profile', 'PUT', profileData),
        |     ^^^^^^^^^^
    118 |     onSuccess: () => {
    119 |       queryClient.invalidateQueries({ queryKey: ['user'] });
    120 |     },

 ERROR(TypeScript)  Type '() => Promise<{ ok: boolean; message?: string; data?: any; }>' is not assignable to type 'MutationFunction<RequestResult, void>'.
  Type 'Promise<{ ok: boolean; message?: string | undefined; data?: any; }>' is not assignable to type 'Promise<RequestResult>'.
    Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type 'RequestResult'.
      Type '{ ok: boolean; message?: string | undefined; data?: any; }' is not assignable to type '{ ok: false; message: string; }'.
        Types of property 'ok' are incompatible.
          Type 'boolean' is not assignable to type 'false'.
 FILE  /home/runner/CustomBedtimeStories/client/src/hooks/use-user.ts:124:5

    122 |
    123 |   const deleteAccountMutation = useMutation<RequestResult, Error>({
  > 124 |     mutationFn: () => handleRequest('/api/account', 'DELETE'),
        |     ^^^^^^^^^^
    125 |     onSuccess: () => {
    126 |       queryClient.invalidateQueries({ queryKey: ['user'] });
    127 |     },

[TypeScript] Found 5 errors. Watching for file changes.
Login endpoint hit, authenticated user: true
User authenticated successfully: { id: 4, email: 'sandeep.khomne@gmail.com' }
Sending login response: {
  message: 'Login successful',
  user: {
    id: 4,
    email: 'sandeep.khomne@gmail.com',
    provider: 'local',
    providerId: null,
    displayName: 'Sandy',
    avatarUrl: 'https://gravatar.com/avatar/768c6e996502463be81ab3d6dd3e8b40?s=400&d=robohash&r=x',
    bio: 'Investor',
    emailVerified: false,
    verificationToken: null,
    verificationTokenExpiry: null,
    resetToken: null,
    resetTokenExpiry: null,
    lastLoginAt: null,
    active: true,
    createdAt: 2024-12-04T13:13:05.642Z,
    updatedAt: 2024-12-05T12:16:12.678Z
  },
  isAuthenticated: true
}
Fetching stories for user: 4
Stories fetched: 7
12:19:40 PM [express] GET /api/stories 304 in 524ms :: [{"id":58,"title":"Saini's Ocean Adventure","c…
